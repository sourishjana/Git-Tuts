Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git branch GitWork

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git branch
  GitWork
* main

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git checkout GitWork
Switched to branch 'GitWork'

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (GitWork)
$ touch hello.xml

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (GitWork)
$ git status
On branch GitWork
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.xml

nothing added to commit but untracked files present (use "git add" to track)

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (GitWork)
$ git add .

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (GitWork)
$ git commit -m "branch commit"
[GitWork 0b3eefb] branch commit
 1 file changed, 3 insertions(+)
 create mode 100644 hello.xml

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (GitWork)
$ git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git branch
  GitWork
* main

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ touch hello.xml

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello.xml

nothing added to commit but untracked files present (use "git add" to track)

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git add .

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git commit -m "Changes in main"
[main ad8a478] Changes in main
 1 file changed, 5 insertions(+)
 create mode 100644 hello.xml

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git log --oneline --graph --decorate
* ad8a478 (HEAD -> main) Changes in main
* a12f13f (origin/main) Branching explained
* c66850c commit file2
* c20c718 2
* d5c1837 Initial Commit

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git diff main GitWork
diff --git a/hello.xml b/hello.xml
index 1d3b344..d2184e5 100644
--- a/hello.xml
+++ b/hello.xml
@@ -1,5 +1,3 @@
 <xml>
-    <main>
-        <data>data</data>
-    </main>
+    <hello>data</hello>
 </xml>
\ No newline at end of file

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git merge GitWork
Auto-merging hello.xml
CONFLICT (add/add): Merge conflict in hello.xml
Automatic merge failed; fix conflicts and then commit the result.

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main|MERGING)
$ git merge --abort


// Here we stop the merging by using 'git merge --abort'


Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git merge GitWork
Auto-merging hello.xml
CONFLICT (add/add): Merge conflict in hello.xml
Automatic merge failed; fix conflicts and then commit the result.


// open vs code and you will get 4 options:(This is called 3-way merging)
1) Accept current changes
2) Accept incoming changes
3) Accept both changes
// one extra option 
4) Compare changes

// choose between any of these 3 options and -> add and commit changes


Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main|MERGING)
$ git add .

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main|MERGING)
$ git commit -m "conflict resolved"
[main 120a2da] conflict resolved


// we merge the changes 


Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git merge GitWork
Already up to date.

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git add .

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git commit -m "conflict resolved"
On branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   hello.xml

no changes added to commit (use "git add" and/or "git commit -a")

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git push origin main
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 8 threads
Compressing objects: 100% (8/8), done.
Writing objects: 100% (9/9), 784 bytes | 784.00 KiB/s, done.
Total 9 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 1 local object.
To github.com:sourishjana/Git-Tuts.git
   a12f13f..120a2da  main -> main

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git branch
  GitWork
* main

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git branch -d GitWork
Deleted branch GitWork (was 0b3eefb).

Sourish@DESKTOP-DJ3D3T0 MINGW64 /f/GIT (main)
$ git log --oneline --graph --decorate
*   120a2da (HEAD -> main, origin/main) conflict resolved
|\
| * 0b3eefb branch commit
* | ad8a478 Changes in main
|/
* a12f13f Branching explained
* c66850c commit file2
* c20c718 2
* d5c1837 Initial Commit
